{"version":3,"sources":["images/myface-logo2.png","Home.js","contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeComponent","href","class","src","logo","alt","this","makenavbar","target","React","Component","contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,0C,oPCiD5BC,E,2KAzCP,OACI,6BACI,uBAAGC,KAAK,KAAR,QACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,SAAR,QACA,uBAAGA,KAAK,YAAR,WACA,uBAAGA,KAAK,YAAR,c,+BAOR,OACI,yBAAKC,MAAM,aAEX,gCACI,yBAAKC,IAAKC,IAAMC,IAAI,+BAGvBC,KAAKC,aAEN,8BACI,oDACA,8EACA,sEACA,uBAAGN,KAAK,8CAA8CO,OAAO,UAA7D,uBAIJ,gCACI,qG,GAlCYC,IAAMC,WCsCnBC,E,2KApCX,OACE,6BACE,uBAAGV,KAAK,KAAR,QACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,SAAR,QACA,uBAAGA,KAAK,YAAR,WACA,uBAAGA,KAAK,YAAR,c,+BAMJ,OACE,yBAAKC,MAAM,aACT,gCACE,yBAAKC,IAAKC,IAAMC,IAAI,+BAGrBC,KAAKC,aAEN,8BACE,wCACA,8EACA,uBAAGN,KAAK,oCAAoCO,OAAO,UAAnD,eAKF,gCACE,qG,GA/BYC,IAAMC,W,OCWbE,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,kBAAC,IAAD,CAAOc,KAAK,QAAQC,UAAWf,IAC/B,kBAAC,IAAD,CAAOc,KAAK,QAAQC,UAAWf,IAC/B,kBAAC,IAAD,CAAOc,KAAK,WAAWC,UAAWJ,MCCpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2f2f34ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myface-logo2.b8e1efa3.png\";","import React from 'react';\r\nimport './App.css';\r\nimport './style.css';\r\nimport logo from './images/myface-logo2.png';\r\n\r\nclass HomeComponent extends React.Component{\r\n\r\n    makenavbar(){\r\n        return(\r\n            <nav>\r\n                <a href=\"/\">HOME</a>\r\n                <a href=\"/requests\">REQUESTS</a>\r\n                <a href=\"/cart\">CART</a>\r\n                <a href=\"/voucher\">VOUCHER</a>\r\n                <a href=\"/contact\">CONTACT</a>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div class=\"container\">\r\n\r\n            <header>\r\n                <img src={logo} alt=\"Logo for AintNoPaintSaint\"/>\r\n            </header>\r\n\r\n            {this.makenavbar()}\r\n\r\n            <main>\r\n                <h1>AINT NO PAINT SAINT.</h1>\r\n                <p>Digital Art | Paint | Tattoo Designs | Doodles </p>\r\n                <p> Visit instagram to for art collection </p>\r\n                <a href=\"https://www.instagram.com/aintnopaintsaint/\" target=\"_blank\">@aintnotpaintsaint</a>\r\n            </main>\r\n\r\n\r\n            <footer>\r\n                <p>Markham, ON. CANADA | aintnotpaintsaint.com | Copyright 2020©</p>\r\n            </footer>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default HomeComponent;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./style.css\";\r\nimport logo from \"./images/myface-logo2.png\";\r\n\r\nclass contact extends React.Component {\r\n  makenavbar() {\r\n    return (\r\n      <nav>\r\n        <a href=\"/\">HOME</a>\r\n        <a href=\"/requests\">REQUESTS</a>\r\n        <a href=\"/cart\">CART</a>\r\n        <a href=\"/voucher\">VOUCHER</a>\r\n        <a href=\"/contact\">CONTACT</a>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <header>\r\n          <img src={logo} alt=\"Logo for AintNoPaintSaint\" />\r\n        </header>\r\n\r\n        {this.makenavbar()}\r\n\r\n        <main>\r\n          <h1>Contact.</h1>\r\n          <p>Digital Art | Paint | Tattoo Designs | Doodles </p>\r\n          <a href=\"mailto:aintnopaintsaint@gmail.com\" target=\"_blank\">\r\n            SEND EMAIL\r\n          </a>\r\n        </main>\r\n\r\n        <footer>\r\n          <p>Markham, ON. CANADA | aintnotpaintsaint.com | Copyright 2020©</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default contact;\r\n","import React from \"react\";\nimport HomeComponent from \"./Home\";\nimport contact from \"./contact\";\nimport { Switch, Route } from \"react-router\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={HomeComponent} />\n      <Route path=\"/home\" component={HomeComponent} />\n      <Route path=\"/anps\" component={HomeComponent} />\n      <Route path=\"/contact\" component={contact} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}